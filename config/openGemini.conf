[common]
  meta-join = ["{{meta_addr_1}}:8092", "{{meta_addr_2}}:8092", "{{meta_addr_3}}:8092"]
  # executor-memory-size-limit = "0"
  # executor-memory-wait-time = "0s"
  # pprof-enabled = false
  # cpu-num = 0
  # memory-size = "0"

[meta]
  bind-address = "{{addr}}:8088"
  http-bind-address = "{{addr}}:8091"
  rpc-bind-address = "{{addr}}:8092"
  dir = "/tmp/openGemini/data/meta/{{id}}"
  # retention-autocreate = true
  # election-timeout = "1s"
  # heartbeat-timeout = "1s"
  # leader-lease-timeout = "500ms"
  # commit-timeout = "50ms"
  # cluster-tracing = true
  # logging-enabled = true
  # lease-duration = "1m0s"
  # meta-version = 2
  # split-row-threshold = 10000
  # imbalance-factor = 0.3
  # https-enabled = false
  # https-certificate = ""
  # https-private-key = ""

[coordinator]
  # write-timeout = "120s"
  # shard-writer-timeout = "120s"
  # shard-mapper-timeout = "3000m"
  # max-remote-write-connections = 100
  # max-remote-read-connections = 100
  # shard-tier = "warm"
  # rp-limit = 100
  # force-broadcast-query = false

[http]
  bind-address = "{{addr}}:8086"
  # auth-enabled = false
  # weakpwd-path = "/tmp/openGemini/weakpasswd.properties"
  # max-connection-limit = 0
  # max-concurrent-write-limit = 0
  # max-enqueued-write-limit = 0
  # enqueued-write-timeout = "10m"
  # max-concurrent-query-limit = 0
  # max-enqueued-query-limit = 0
  # enqueued-query-timeout = "5m"
  # chunk-reader-parallel = 0
  # max-body-size = 0
  # https-enabled = false
  # https-certificate = ""
  # https-private-key = ""

[data]
  store-ingest-addr = "{{addr}}:8400"
  store-select-addr = "{{addr}}:8401"
  store-data-dir = "/tmp/openGemini/data/{{id}}"
  store-wal-dir = "/tmp/openGemini/data/{{id}}"
  store-meta-dir = "/tmp/openGemini/data/meta/{{id}}"
  # wal-enabled = true
  # wal-sync-interval = "100ms"
  # wal-replay-parallel = false
  # imm-table-max-memory-percentage = 10
  # write-cold-duration = "5s"
  # shard-mutable-size-limit = "60m"
  # node-mutable-size-limit = "200m"
  # max-write-hang-time = "3s"
  # max-concurrent-compactions = 4
  # compact-full-write-cold-duration = "1h"
  # max-full-compactions = 1
  # compact-throughput = "80m"
  # compact-throughput-burst = "90m"
  # compact-recovery = false
  # snapshot-throughput = "64m"
  # snapshot-throughput-burst = "70m"
  # Whether to cache data blocks in hot shard
  cache-table-data-block = false
  # Whether to cache meta blocks in hot shard
  cache-table-meta-block = false
  # Whether to use mmap ability
  enable-mmap-read = false
  # The limit of read cache use size, The unit is byte, less than or equal to 0 is unused, recommend 5368709120 if use
  read-cache-limit = 0
  # write-concurrent-limit = 0
  # readonly = false

[retention]
  # enabled = true
  # check-interval = "30m"

[logging]
  # format = "auto"
  # level = "info"
  path = "/tmp/openGemini/logs/{{id}}"
  # max-size = "256m"
  # max-num = 16
  # max-age = 7
  # compress-enabled = true

[tls]
  # min-version = "TLS1.2"
  # ciphers = [
    # "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
    # "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
    # "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
    # "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
  # ]

[monitor]
  # pushers = ""
  # store-enabled = false
  # store-database = "_internal"
  # store-interval = "10s"
  # store-path = "/tmp/openGemini/metric/{{id}/metric.data"
  # compress = false
  # http-endpoint = "{{addr}}:8086"

[gossip]
  # enabled = true
  # log-enabled = true
  bind-address = "{{addr}}"
  store-bind-port = 8011
  meta-bind-port = 8010
  # prob-interval = '1s'
  # suspicion-mult = 4
  members = ["{{meta_addr_1}}:8010", "{{meta_addr_2}}:8010", "{{meta_addr_3}}:8010"]

[spdy]
  # recv-window-size = 8
  # concurrent-accept-session = 4096
  # open-session-timeout = "5m"
  # session-select-timeout = "5m"
  # data-ack-timeout = "10s"
  # tcp-dial-timeout = "10s"
  # tls-enable = false
  # tls-insecure-skip-verify = false
  # tls-client-auth = false
  # tls-certificate = ""
  # tls-private-key = ""
  # tls-server-name = ""
  # conn-pool-size = 4
  # tls-client-certificate = ""
  # tls-client-private-key = ""
  # tls-ca-root = ""

[castor]
		enabled = false
		pyworker-addr = ["127.0.0.1:6666"]
		connect-pool-size = 1  # default: 30, connection pool to pyworker
		result-wait-timeout = 10  # default: 30 second
  [castor.detect]
		algorithm = ['BatchDIFFERENTIATEAD']
		config_filename = ['detect_base']
  [castor.fit_detect]
		algorithm = ['DIFFERENTIATEAD']
		config_filename = ['detect_base']
  [castor.predict]
		algorithm = ['METROPD']
		config_filename = ['predict_base']
  [castor.fit]
		algorithm = ['METROPD']
		config_filename = ['fit_base']